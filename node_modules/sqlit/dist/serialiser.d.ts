import { Result as SelectResult } from './select';
import { Model, Document, Value } from 'sqlex';
declare class DocumentMap {
    map: Map<Model, Map<Value, number>>;
    next: number;
    constructor();
    has(model: Model, data: Value | Document): boolean;
    add(model: Model, value: Value): number;
    get(model: Model, data: Value | Document): number;
}
interface Task {
    model: Model;
    root: Document;
}
export declare class JsonSerialiser {
    data: SelectResult;
    map: DocumentMap;
    tasks: Task[];
    constructor(data: SelectResult);
    serialise(model: Model): Document[] | null;
    private processTask;
}
export declare class XstreamSerialiser {
    data: SelectResult;
    map: DocumentMap;
    lines: string[];
    constructor(data: SelectResult);
    serialise(model: Model, types?: string[]): string;
    private pushFields;
}
export {};
